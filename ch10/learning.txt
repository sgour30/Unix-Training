15/04/20

Introduction:
Signals are software interrupts sent to a program to indicate that an important event has occurred. This chapter will deal with various signals and their action.


16/04/20
Signal concept :-
Every signal has a name. They all begin with the three characters SIG.
SIGABRT is the abort signal that is generated when a process calls the abort function.
SIGALRM is the alarm signal that is generated when the timer set by the alarm function goes off.

Different unix flavours supports different number of signals. All signal names are defined by positive integer only.
0 is not used by any signal as it is used by kill function for special case. It is also called null signal in POSIX.1
Signals can be generated by various reasons such as
1.Pressing special character on keyboard
2.Hardware Exception
3.Software Conditions

Signal Dispostion:- 
The kernel can perform three things when signal occurs. They are
i)Ignore the signal
ii)Catch the signal
iii)Let the default action apply.

Signal Function:-
It basically provides functionality to use various signal features and return previous disposition of signal.
It has two arguments
The first argument, signo, is an integer.
The second argument, func, is a pointer to a function that takes a single integer argument and returns nothing.

17/04/19
 Unreliable Signals : Signals in early UNIX versions were not always accurate.
 
 Interrupted System Calls
 System Calls are those where we ask to perform a function where as an interrupted System calls are those where the return value is some  error.
 There are divisions of interrupted System Calls
 Slow System calls -These system calls can hold a task forever.
 Automatic restarting of system calls .

19/04/19
Rentrant functions:
When a signal that is being caught is handled by a process, the normal sequence of instructions being executed by the process is temporarily interrupted. It could be:
1.Just after executing one system call
2.In the middle of one system call(like malloc), after the signal handler returns, it will continue executing that system call.
If signal comes in the middle of execution of one system call, and then it return from signal handler to the normal execution of that system call, problems may occur.
UNIX specifies the functions that are guaranteed to be reentrant, which means, even if it is interrupted in the middle, if coming back from signal handler, it is working well.

20/04/19
SIGCLD Semantics
If the process specifically sets its disposition to SIG_IGN, children of the calling process will not generate zombie processes. It means, after children processes terminate, all status information will be discarded. If the calling process calls wait, the calling process will block until all children have terminated and then wait return -1 with errno set to ECHILD

Reliable-Signal Terminology and Semantics:
When the signal is generated, the kernel usually sets a flag of some form in the process table.
The signal is delivered to a process when the action for a signal is taken.
During the time between the generation of a signal and its delivery, the signal is said to be pending.
If there are more than one signals delivered to the process, the POSIX.1 suggests that the signals related to the current state of the process should be delivered before other signals. But order of signals delevered is not defined.
